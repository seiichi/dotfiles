" General {{{
set nocompatible                  " be iMproved

set history=256

" use clipboard instead of register
set clipboard=unnamedplus,autoselect         " use system native clipboard

" title of the terminal window
"let &titlestring="%t"."%( (%{expand(\"%:~:h\")})%)"."%( %a%r%m%)"
let &titlestring="%t"."%( (%{expand(\"%:~:h\")})%)"
let &titlestring="%t"."%( %a%r%m%)"
if !has('gui_running')
  let &t_ts = "\e]0;"
  let &t_fs = "\007"
endif
if $PYENV_VERSION != "mutt"
  set title
endif

set nobackup
set nowritebackup

set cursorline

set modeline
set modelines=5

set t_Co=256

let g:is_posix = 1                " to use modern shell
let mapleader = ','

set tags=./tags;$HOME

set fileformats=unix,dos,mac

set ttyfast
" }}}

" Formatting {{{
set formatoptions=tcroqB

set textwidth=0

set backspace=indent,eol,start

set autoindent
au FileType c set cindent
set indentkeys-=0#                " do not break indent on #
set cinkeys-=0#
set cinoptions=:s,ps,ts,cs
set cinwords=if,else,while,do
set cinwords+=for,switch,case
"}}}

" Search {{{
set incsearch                     " incremental search
set hlsearch                      " highlight search
set ignorecase
set smartcase                     " i don't like ignorecase

" make search results appear in the middle of the screen
nmap n nzz
nmap N Nzz
nmap * *zz
nmap # #zz
nmap g* g*zz
nmap g# g#zz
"}}}

" Encoding {{{
set encoding=utf-8
set termencoding=utf-8
set fileencodings=utf-8,iso-2022-jo,us_ascii,sjis,eus-jp
"set ambiwidth=double
set ambiwidth=single
"}}}

" Visual {{{
syntax on

set mouse=a
set mousehide                     " hide mouse after chars typed

" list
set list
set listchars=tab:>-
set listchars+=trail:=
"set listchars+=eol:¬
set listchars+=extends:»,precedes:«
map <silent> <leader>L :set invlist<CR>

" status line
set laststatus=2
"set statusline=%<%f\              " custom statusline
"set stl+=[%{&ff}]                 " show fileformat
"set stl+=[%{&fileencoding}]       " show fileencoding
"set stl+=%y%m%r%=
"set stl+=%-14.(%l,%c%V%)\ %P
"}}}

" Folding {{{
set foldenable
set foldmethod=marker             " fold on the marker ({{{ ... }}})
set foldlevel=100                 " disable autofold

set foldopen=block,hor,tag
set foldopen+=percent,mark
set foldopen+=quickfix
"}}}

" FileType {{{
au FileType javascript set expandtab ts=4 sw=4 sts=4
au FileType ruby set expandtab ts=2 sw=2 sts=2
au FileType eruby set expandtab ts=2 sw=2 sts=2
au FileType perl set expandtab ts=2 sw=2 sts=2
au FileType python set expandtab ts=4 sw=4 sts=4
au FileType sh set expandtab ts=2 sw=2 sts=2
au FileType css set expandtab ts=2 sw=2 sts=2
au FileType scss set expandtab ts=2 sw=2 sts=2
au FileType htmlcheetah set expandtab ts=2 sw=2 sts=2
au FileType html set expandtab ts=2 sw=2 sts=2
au FileType xhtml set expandtab ts=2 sw=2 sts=2
au FileType jinja set expandtab ts=2 sw=2 sts=2
au FileType vim set expandtab ts=2 sw=2 sts=2
au FileType markdown set expandtab ts=2 sw=2 sts=2
autocmd BufRead,BufNewFile *.md setfiletype markdown

" 80 column layout - http://vim-users.jp/2011/05/hack217/
if exists('&colorcolumn')
  au FileType sh,c,python,javascript,ruby,scss setlocal colorcolumn=+1 tw=80
  au FileType help setlocal colorcolumn=+1 tw=78
endif
"}}}

" Vundle {{{
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#rc()

" let Vundle manage Vundle
Bundle 'gmarik/Vundle.vim'

" my bundles:
Bundle 'Lokaltog/vim-powerline'
Bundle 'altercation/vim-colors-solarized'
Bundle 'thinca/vim-quickrun'
Bundle 'scrooloose/syntastic.git'
Bundle 'skwp/vim-html-escape'

Bundle 'tpope/vim-markdown'

Bundle 'tpope/vim-fugitive'
Bundle 'Glench/Vim-Jinja2-Syntax'
Bundle 'elzr/vim-json'
Bundle 'mustache/vim-mustache-handlebars'
let g:mustache_abbreviations = 1

filetype plugin indent on
" }}}

" appearance {{{
colorscheme solarized
set background=dark
" }}}

" vim-quickrun {{{
silent! map <unique> <Leader>q <Plug>(quickrun)
" }}}

" syntastic {{{
let g:syntastic_javascript_checkers = ['jscs']
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
" }}}
